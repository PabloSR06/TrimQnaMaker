@page "/"

<PageTitle>Get QNA</PageTitle>

@using TrimQnaMaker.Data
@inject QnAMakerService qnaService

<h1>Get QNA Questions</h1>

<p><em>First you have a list of answers, when you click on the View button  you will see at the end another table with the questions related to that answer and a button to delete each one.</em></p>
<p><em>When you have finished, the save button will synchronise the questions with the knowledge base.</em></p>

@if (qnaDocuments == null)
{
    <p><em>Have you change the keys in the code?</em></p>
    <p><em>Sometimes take a while</em></p>
    <button disabled=@IsTaskRunning @onclick="() => Load()">
        Load Data
    </button>
}
else
{
    if (qnaDocuments.Count != 0)
    {

        <div>
            <table>
                <tr>
                    <th>Question</th>
                    <th>Amount</th>
                    <th>Button</th>
                </tr>


                @foreach (var pair in qnaDocuments)
                {
                    <tr>
                        <td>@pair.Answer</td>
                        <td>@pair.Questions.Count</td>
                        <td><button @onclick="() => SeeQuestion(pair)">View</button></td>
                    </tr>
                }
            </table>
        </div>
        <br />
        <div>
        @if (questions != null)
        {
            <table title="Questions">
                <tr>
                    <td>@qnaDocuments[id].Answer</td>
                    <td>@qnaDocuments[id].Questions.Count</td>
                </tr>
                <tr>
                    <th>Response</th>
                    <th>Button</th>
                </tr>

                
                @foreach (var question in questions)
                {
                    <tr>
                    <td>@question</td>
                        <td><button @onclick="() => DeleteQuestion(question)">X</button></td>

                    </tr>

                }
           
            </table>
        }
        </div>
        <div>
            <br>
            <p><em>Click at the end</em></p>
            <button @onclick="() => Save()">Save</button>
        </div>
    }
    else
    {
        <p><em>Mmm is empty , maybe there is not any or something went wrong</em></p>

    }

}

@code {
    private List<QnaDocumentMin>? qnaDocuments;
    private List<String>? questions;
    private int id;
    private bool IsTaskRunning = false;


    private KeysModel _keys = new KeysModel
        {
            endpoint = "https://westus.api.cognitive.microsoft.com",
            subscriptionId = "",
            kbid = "",
            amount = 9,
        };


    async void Load()
    {

        if (!IsTaskRunning)
        {
            IsTaskRunning = true;
            StateHasChanged();
            
            
            var x = await qnaService.GetBadQna(_keys);
            qnaDocuments = x;
        }


    }

    async void Save()
    {
        if (qnaDocuments != null)
            await qnaService.UpgradeKB(qnaDocuments, _keys);

    }

    void DeleteQuestion(string question)
    {
        if (qnaDocuments != null && questions != null)
        {
            questions.Remove(question);
            if (qnaDocuments[id].QuestionToDelete == null)
                qnaDocuments[id].QuestionToDelete = new List<string>();
            qnaDocuments[id].QuestionToDelete.Add(question);
            qnaDocuments[id].Questions = questions;
            qnaDocuments[id].hasChanged = true;
        }


    }
    void SeeQuestion(QnaDocumentMin pair)
    {
        if (qnaDocuments != null)
        {
            questions = pair.Questions;
            id = qnaDocuments.IndexOf(pair);
        }

    }
}